// <auto-generated />
using System;
using EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCore.Migrations
{
    [DbContext(typeof(FristContext))]
    partial class FristContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCore.Entites.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Creatime");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EFCore.Entites.UserLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LogDec");

                    b.Property<DateTime>("LoginTime");

                    b.Property<Guid>("UId");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogs");
                });

            modelBuilder.Entity("EFCore.Entites.User", b =>
                {
                    b.OwnsOne("EFCore.Entites.Pason", "Pasons", b1 =>
                        {
                            b1.Property<Guid>("UserId");

                            b1.Property<int>("Age");

                            b1.ToTable("Users");

                            b1.HasOne("EFCore.Entites.User")
                                .WithOne("Pasons")
                                .HasForeignKey("EFCore.Entites.Pason", "UserId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("EFCore.Entites.UserLog", b =>
                {
                    b.HasOne("EFCore.Entites.User", "User")
                        .WithMany("UserLog")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
